@using ProductSellingWorkflow.Models
@model ProductUpdateViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Product</h2>
<br />
@using (Html.BeginForm("Edit", "Product", null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.Original.Name)
    @Html.HiddenFor(x => x.Original.Description)
    @Html.HiddenFor(x => x.Original.Color)
    @Html.HiddenFor(x => x.Original.Size)
    @Html.HiddenFor(x => x.Original.Price)

    for (int i = 0; i < Model.Original.TagsArray.Length; i++)
    {
        @Html.HiddenFor(x => x.Original.TagsArray[i])
    }

    @Html.ValidationSummary(false)

    <div class="form-group">
        <label class="col-sm-2 control-label"><span class="text-danger">*</span>&nbsp;<span>@Html.DisplayNameFor(x => x.Name)</span></label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", autocomplete = "off" })
            <p><em><small>@Html.ValidationMessageFor(x => x.Name, String.Empty, new { @class = "text-danger" })</small></em></p>
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@*<span class="text-danger">*</span>&nbsp;*@<span>@Html.DisplayNameFor(x => x.Description)</span></label>
        <div class="col-sm-10">
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", autocomplete = "off" })
            @*<p><em><small>@Html.ValidationMessageFor(x => x.Description, String.Empty, new { @class = "text-danger" })</small></em></p>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@*<span class="text-danger">*</span>&nbsp;*@<span>@Html.DisplayNameFor(x => x.Color)</span></label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Color, new { @class = "form-control", autocomplete = "off" })
            @*<p><em><small>@Html.ValidationMessageFor(x => x.Color, String.Empty, new { @class = "text-danger" })</small></em></p>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@*<span class="text-danger">*</span>&nbsp;*@<span>@Html.DisplayNameFor(x => x.Size)</span></label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Size, new { @class = "form-control", autocomplete = "off" })
            @*<p><em><small>@Html.ValidationMessageFor(x => x.Size, String.Empty, new { @class = "text-danger" })</small></em></p>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@*<span class="text-danger">*</span>&nbsp;*@<span>@Html.DisplayNameFor(x => x.Price)</span></label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Price, new { @class = "form-control", autocomplete = "off" })
            @*<p><em><small>@Html.ValidationMessageFor(x => x.Price, String.Empty, new { @class = "text-danger" })</small></em></p>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">@*<span class="text-danger">*</span>&nbsp;*@<span>@Html.DisplayNameFor(x => x.Tags)</span></label>
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.Tags, new { @class = "form-control", autocomplete = "off" })
            @*<p><em><small>@Html.ValidationMessageFor(x => x.Size, String.Empty, new { @class = "text-danger" })</small></em></p>*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-info">Submit</button>
        </div>
    </div>
}

